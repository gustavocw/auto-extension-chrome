const f=(t,r={})=>{var e,a,l,n;if(!t)return Promise.resolve(!1);const c={...{behavior:"smooth",block:"center",delay:800},...r},i=((a=(e=t.getAttribute("style"))==null?void 0:e.match(/background-color:[^;]+/))==null?void 0:a[0])||"",o=((n=(l=t.getAttribute("style"))==null?void 0:l.match(/transition:[^;]+/))==null?void 0:n[0])||"";return t.setAttribute("style",`${t.getAttribute("style")||""}; transition: background-color 0.5s ease; background-color: rgba(255, 243, 224, 0.8);`),t.scrollIntoView({behavior:c.behavior,block:c.block}),new Promise(d=>{setTimeout(()=>{setTimeout(()=>{let p=t.getAttribute("style")||"";p=p.replace(/background-color:[^;]+;?/,i?i+";":"").replace(/transition:[^;]+;?/,o?o+";":""),t.setAttribute("style",p.trim())},500),d(!0)},c.delay)})},_=`
Você é um assistente especializado em criar propostas para freelancers no Workana.
Analise a descrição do projeto abaixo e crie uma proposta profissional.

DESCRIÇÃO DO PROJETO:
###
{description}
###

INFORMAÇÕES SOBRE O FREELANCER:
###
{aboutYou}
###

METODOLOGIA DE MARKETING PREFERIDA:
###
{marketingMethodology}
###

O freelancer cobra R$ {hourlyRate} por hora.

ATENÇÃO: REGRAS IMPORTANTES QUE VOCÊ DEVE SEGUIR:
1. NUNCA mencione valores monetários, preços, taxas ou comissões na descrição ou respostas.
2. NUNCA inclua seu contato pessoal como e-mail, telefone, WhatsApp ou links para redes sociais.
3. NUNCA mencione plataformas externas que possam ser usadas para comunicação fora do Workana.
4. Mantenha a proposta profissional, clara e objetiva.
5. Use primeira pessoa do singular (eu).
6. Incorpore naturalmente as informações sobre o freelancer e sua metodologia de marketing na proposta.
7. Adapte a proposta de acordo com o tipo de projeto, demonstrando compreensão das necessidades do cliente.

Se houver perguntas específicas na descrição do projeto após a seção "PERGUNTAS QUE PRECISAM SER RESPONDIDAS:", 
forneça respostas detalhadas e personalizadas para cada uma delas, baseando-se no contexto do projeto.

Sua resposta deve seguir estritamente este formato JSON:
{
  "description": "Uma proposta profissional e personalizada baseada na descrição do projeto. Deve ser detalhada, demonstrar compreensão do projeto e destacar as habilidades relevantes. Entre 150-300 palavras. NUNCA mencione valores monetários ou formas de contato externas.",
  "deliveryTime": "Prazo de entrega sugerido (ex: '7 dias', '2 semanas', etc.)",
  "suggestedHours": número inteiro representando quantas horas você estima para concluir este projeto,
  "answersToQuestions": "Uma resposta personalizada para as perguntas ou um texto genérico sobre experiência prévia caso não existam perguntas específicas. NUNCA mencione valores monetários ou formas de contato externas."
}
`,N="https://api.openai.com/v1/chat/completions",w={start:"Estou analisando o projeto e gerando sua proposta...",analyzing:"Analisando descrição do projeto...",generating:"Gerando proposta personalizada...",finalizing:"Finalizando sua proposta...",error:"Erro ao gerar proposta. Tentando novamente...",complete:"Proposta gerada com sucesso!"},h={description:"Olá, analisei seu projeto e tenho interesse em colaborar. Tenho experiência com projetos similares e posso entregar resultados de qualidade dentro do prazo estipulado.",deliveryTime:"7 dias",answersToQuestions:"Tenho experiência relevante nesta área e já desenvolvi projetos similares anteriormente.",availabilityAnswer:"Posso começar imediatamente após a aprovação da proposta.",dataNeededAnswer:"Precisarei de acesso aos requisitos detalhados do projeto, exemplos ou referências, e um contato para esclarecimento de dúvidas durante o desenvolvimento."},m={descriptionInput:"#BidContent",deliveryTimeInput:"#BidDeliveryTime",submitButton:'input[type="submit"].btn-primary',defaultQuestions:'input[id^="defaultProjectQuestionsAnswers-question-"]',customQuestions:'input[id^="customProjectQuestionsAnswers-question-"]',skillsList:".multi-select-results-item",skillsDropdown:"input.multi-select-search-field",portfolioButtons:"label#selectPortfolio"};function A(t=w.start){P();const r=document.createElement("div");r.id="gpt-loading-indicator",r.style.cssText=`
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(to right, #9333ea, #6366f1);
    color: white;
    padding: 15px 20px;
    border-radius: 8px;
    font-family: sans-serif;
    font-size: 14px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    z-index: 10000;
    display: flex;
    align-items: center;
    min-width: 250px;
  `;const s=document.createElement("span");return s.textContent=t,r.appendChild(s),document.body.appendChild(r),r}function b(t){const r=document.getElementById("gpt-loading-indicator");if(r){const s=r.querySelector("span");s&&(s.textContent=t)}else A(t)}function P(){const t=document.getElementById("gpt-loading-indicator");t&&t.remove()}async function v(t){var o,e,a;const{description:r,hourlyRate:s="100",maxTokens:c=1200,temperature:i=.7}=t;A();try{b(w.analyzing);const l="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",n=localStorage.getItem("workana_about_you")||"",d=localStorage.getItem("workana_marketing_methodology")||"",p=_.replace("{description}",r).replace("{hourlyRate}",s).replace("{aboutYou}",n||"Informações não fornecidas").replace("{marketingMethodology}",d||"Metodologia não fornecida");b(w.generating);const u=await fetch(N,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${l}`},body:JSON.stringify({model:"gpt-3.5-turbo",messages:[{role:"user",content:p}],max_tokens:c,temperature:i,n:1})});if(!u.ok){const y=await u.json();throw new Error(`Erro na API do OpenAI: ${((o=y.error)==null?void 0:o.message)||u.statusText}`)}b(w.finalizing);const k=(a=(e=(await u.json()).choices[0])==null?void 0:e.message)==null?void 0:a.content;if(!k)throw new Error("Resposta vazia da API do OpenAI");try{const y=JSON.parse(k);return y.suggestedHours=150,b(w.complete),setTimeout(()=>{P()},1500),y}catch{throw new Error("Formato inválido na resposta da API")}}catch{return b(w.error),setTimeout(()=>{P()},3e3),{description:h.description,deliveryTime:h.deliveryTime,suggestedHours:150,answersToQuestions:h.answersToQuestions}}}async function D(t){const r=document.getElementById(m.descriptionInput.replace("#","")),s=document.getElementById(m.deliveryTimeInput.replace("#",""));if(!r||!s){console.error("Inputs obrigatórios não encontrados.");return}try{let i;if(t)i=t;else{const o=localStorage.getItem("workana_project_description");if(!o)throw new Error("Descrição do projeto não disponível");const e=localStorage.getItem("workana_hourly_rate")||"50";i=await v({description:o,hourlyRate:e})}await f(r),r.focus(),r.value=i.description,r.dispatchEvent(new Event("input",{bubbles:!0})),await new Promise(o=>setTimeout(o,500)),await f(s),s.focus(),s.value=i.deliveryTime,s.dispatchEvent(new Event("input",{bubbles:!0})),localStorage.setItem("workana_gpt_answers",i.answersToQuestions)}catch{console.error("Erro ao gerar proposta GPT. Preenchendo fallback."),await f(r),r.focus(),r.value=h.description,r.dispatchEvent(new Event("input",{bubbles:!0}))}const c=document.querySelector(m.submitButton);c&&(await f(c),c.style.transition="box-shadow 0.5s ease, transform 0.3s ease",c.style.boxShadow="0 0 12px 4px #4CAF50",c.style.transform="scale(1.05)",console.log("Botão de envio destacado. Pronto para clique."))}async function x(t){async function r(){if(t)return t;const i=localStorage.getItem("workana_project_description");if(!i)return console.error("Descrição do projeto não encontrada no localStorage."),null;const o=localStorage.getItem("workana_hourly_rate")||"50";try{return await v({description:i,hourlyRate:o})}catch(e){return console.error("Erro ao gerar proposta com GPT:",e),null}}const s=document.getElementById("Hours");if(!s){console.error("Campo de horas não encontrado.");return}const c=await r();if(!c){console.error("Falha ao obter resposta do GPT, não é possível prosseguir.");return}await f(s),s.focus(),s.value=c.suggestedHours.toString(),s.dispatchEvent(new Event("input",{bubbles:!0})),D(c)}async function E(){function t(){return window.location.href.includes("workana.com/job/")}function r(){var e;const o=document.querySelector("div.expander.js-expander-passed");return((e=o==null?void 0:o.textContent)==null?void 0:e.trim())||null}function s(o){try{localStorage.setItem("workana_project_description",o)}catch{}}function c(o){o.style.transition="box-shadow 0.3s, transform 0.3s",o.style.boxShadow="0 0 10px 2px #4CAF50",o.style.transform="scale(1.05)",setTimeout(()=>{o.style.boxShadow="",o.style.transform=""},600)}function i(){const o=document.getElementById("bid_button");o&&(c(o),setTimeout(()=>{o.click()},800))}if(t()){const o=r();o&&s(o),setTimeout(()=>{i()},Math.floor(1e3+Math.random()*500))}}async function S(t){async function r(){if(t)return t;const o=localStorage.getItem("workana_project_description");if(!o)return console.error("Descrição do projeto não encontrada no localStorage."),null;const e=localStorage.getItem("workana_hourly_rate")||"50";try{return await v({description:o,hourlyRate:e})}catch(a){return console.error("Erro ao gerar proposta com GPT:",a),null}}async function s(o){await f(o),o.click()}async function c(o){const e=document.querySelectorAll(m.portfolioButtons);if(e.length===0){console.log("Nenhum projeto de portfólio encontrado. Avançando para o próximo passo..."),window.location.href.includes("workana.com/messages/bid/")?x(o):(console.log("Não está na página de projeto específico, apenas scanProject será executado"),E());return}const a=Math.min(3,e.length);for(let n=0;n<a;n++){const d=e[n];await s(d),await new Promise(p=>setTimeout(p,500))}window.location.href.includes("workana.com/messages/bid/")?x(o):(console.log("Não está na página de projeto específico, apenas scanProject será executado"),E())}const i=await r();if(!i){console.error("Falha ao obter resposta do GPT, não é possível prosseguir.");return}await c(i)}async function I(t=5e3){return new Promise(r=>{let c=0;const i=()=>{document.querySelectorAll(m.skillsList).length>0?r(!0):c>=t?r(!1):(c+=100,setTimeout(i,100))};i()})}async function T(t){async function r(){if(t)return t;const e=localStorage.getItem("workana_project_description");if(!e)return console.error("Descrição do projeto não encontrada no localStorage."),null;const a=localStorage.getItem("workana_hourly_rate")||"50";try{return await v({description:e,hourlyRate:a})}catch(l){return console.error("Erro ao gerar proposta com GPT:",l),null}}async function s(e){await f(e),e.click()}async function c(){const e=[m.skillsDropdown,".multi-select-search-field",".multi-select-container input",".multi-select-placeholder",".skills-container .multi-select",'input[placeholder*="habilidade"]',".skills-selection-wrapper input"];let a=null;for(const l of e){const n=document.querySelector(l);if(n){a=n,console.log(`Campo de habilidades encontrado com seletor: ${l}`);break}}if(!a){const l=document.querySelectorAll('div[class*="skill" i]');if(l.length>0){console.log("Container de habilidades encontrado por classe parcial");for(const n of l){const d=n.querySelector("input")||n.querySelector(".multi-select");if(d){a=d;break}}}}if(!a)return console.error("Nenhum campo de seleção de habilidades encontrado após múltiplas tentativas."),!1;await f(a);try{if(a.focus(),await new Promise(n=>setTimeout(n,300)),a.click(),await new Promise(n=>setTimeout(n,500)),a instanceof HTMLInputElement&&(a.value=" ",a.dispatchEvent(new Event("input",{bubbles:!0})),await new Promise(n=>setTimeout(n,300)),a.value="",a.dispatchEvent(new Event("input",{bubbles:!0}))),a.click(),!await I(2e3)){const n=a.parentElement;n&&(await f(n),n.click(),await new Promise(d=>setTimeout(d,500)))}return!0}catch(l){return console.error("Erro ao interagir com campo de habilidades:",l),!1}}async function i(e){const a=document.querySelectorAll(m.skillsList);if(a.length===0){console.log("Nenhuma habilidade disponível para seleção. Avançando para o próximo passo..."),S(e);return}const l=Math.min(5,a.length);for(let n=0;n<l;n++){const d=a[n];await s(d),await new Promise(p=>setTimeout(p,500))}console.log("Habilidades selecionadas."),S(e)}async function o(){const e=await r();if(!e){console.error("Falha ao obter resposta do GPT, não é possível prosseguir.");return}await c()?await I()?await i(e):(console.log("Lista de habilidades não apareceu. Avançando para o próximo passo..."),S(e)):(console.log("Não foi possível abrir o dropdown de habilidades. Avançando para o próximo passo..."),S(e))}o()}async function C(t,r=5e3){return new Promise(s=>{let i=0;const o=()=>{document.querySelector(t)?s(!0):i>=r?s(!1):(i+=100,setTimeout(o,100))};o()})}async function R(){let t=null;function r(){const e=[];return document.querySelectorAll(m.defaultQuestions).forEach(n=>{var p;const d=(p=n.closest(".form-group"))==null?void 0:p.querySelector("label");d&&d.textContent&&e.push({id:n.id,question:d.textContent.trim(),element:n})}),document.querySelectorAll(m.customQuestions).forEach(n=>{var p;const d=(p=n.closest(".form-group"))==null?void 0:p.querySelector("label");d&&d.textContent&&e.push({id:n.id,question:d.textContent.trim(),element:n})}),e}async function s(e){const a=localStorage.getItem("workana_project_description");if(!a)return console.error("Descrição do projeto não encontrada no localStorage."),null;const l=localStorage.getItem("workana_hourly_rate")||"50",n=e.map(p=>`- ${p.question}`).join(`
`),d=`${a}

PERGUNTAS QUE PRECISAM SER RESPONDIDAS:
${n}`;try{return await v({description:d,hourlyRate:l})}catch(p){return console.error("Erro ao gerar proposta com GPT:",p),null}}async function c(e,a){await f(e),e.value=a,e.dispatchEvent(new Event("input",{bubbles:!0}))}async function i(e,a){const l=e.find(u=>u.question.toLowerCase().includes("disponibilidade")||u.id.includes("availability_to_start")),n=e.find(u=>u.question.toLowerCase().includes("tempo")||u.id.includes("delivery_time_needed")),d=e.find(u=>u.question.toLowerCase().includes("experiência")||u.id.includes("experience_on_this_type_of_projects")),p=e.find(u=>u.question.toLowerCase().includes("informações")||u.id.includes("data_needed_to_start"));for(const u of e){let g=a.answersToQuestions;u===l?g=h.availabilityAnswer:u===n?g=a.deliveryTime:u===d?g=a.answersToQuestions:u===p&&(g=h.dataNeededAnswer),await c(u.element,g),await new Promise(k=>setTimeout(k,300))}}async function o(){if(!await C(`${m.defaultQuestions}, ${m.customQuestions}`)){console.log("Inputs de perguntas não carregaram. Avançando para o próximo passo..."),await T(t);return}const a=r();if(a.length===0){console.log("Nenhuma pergunta encontrada. Avançando para o próximo passo..."),await T(t);return}if(t=await s(a),!t){console.error("Falha ao obter resposta do GPT, não é possível prosseguir.");return}localStorage.setItem("workana_gpt_answers",t.answersToQuestions),await i(a,t),await T(t)}o()}async function j(){const t=window.location.href;t.includes("workana.com/job/")?(console.log("Página de projeto detectada."),await E()):t.includes("workana.com/messages/bid/")?(console.log("Página de envio de proposta detectada."),await R()):(console.log("Não está na página de projeto nem na página de proposta. Executando apenas scanProject."),await E())}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",j):j();
